{"version":3,"sources":["api/goods.ts","components/GoodsList/GoodsList.tsx","components/Button/Button.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","ok","Error","status","statusText","json","get5First","goods","sort","a","b","name","localeCompare","slice","getRedGoods","filter","good","color","GoodsList","props","className","map","id","style","Button","text","onLoad","type","onClick","App","state","hasLoadingError","loadGoods","loadQuery","setState","this","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0QAGO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAIf,IAAMC,EAAY,WACvB,OAAOT,IACJE,MAAK,SAAAQ,GAAK,OACTA,EAAMC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,SACzCE,MAAM,EAAG,OAGLC,EAAc,WACzB,OAAOjB,IACJE,MAAK,SAAAQ,GAAK,OACTA,EAAMQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,a,OClBnBC,EAA6B,SAACC,GACzC,IAAQZ,EAAUY,EAAVZ,MAER,OACE,oBAAIa,UAAU,yBAAd,SACGb,EAAMc,KAAI,gBAAGC,EAAH,EAAGA,GAAIX,EAAP,EAAOA,KAAMM,EAAb,EAAaA,MAAb,OACT,oBAEEM,MAAO,CAAEN,SACTG,UAAU,kBAHZ,SAKGT,GAJIW,SCNFE,EAA0B,SAACL,GACtC,IAAQM,EAAiBN,EAAjBM,KAAMC,EAAWP,EAAXO,OAEd,OACE,wBACEC,KAAK,SACLC,QAAS,kBAAMF,KACfN,UAAU,kBAHZ,SAKGK,KCuCQI,E,4MA1CbC,MAAe,CACbvB,MAAO,GACPwB,iBAAiB,G,EAGnBC,U,uCAAY,WAAOC,GAAP,eAAAxB,EAAA,+EAEYwB,IAFZ,OAEF1B,EAFE,OAIR,EAAK2B,SAAS,CAAE3B,UAJR,gDAMR,EAAK2B,SAAS,CAAEH,iBAAiB,IANzB,yD,kGAUZ,WAAU,IAAD,OACP,EAAmCI,KAAKL,MAAhCvB,EAAR,EAAQA,MAAOwB,EAAf,EAAeA,gBAEf,OACE,sBAAKX,UAAU,MAAf,UACE,uDACCb,EAAM6B,OAAS,GACZ,cAAC,EAAD,CAAW7B,MAAOA,IACrBwB,GACI,yDACL,cAAC,EAAD,CACEN,KAAK,iBACLC,OAAQ,kBAAM,EAAKM,UAAUnC,MAE/B,cAAC,EAAD,CACE4B,KAAK,qBACLC,OAAQ,kBAAM,EAAKM,UAAU1B,MAE/B,cAAC,EAAD,CACEmB,KAAK,iBACLC,OAAQ,kBAAM,EAAKM,UAAUlB,a,GApCrBuB,IAAMC,W,MCRxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.267201c2.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = (): Promise<Good[]> => {\n  return getAll()\n    .then(goods => (\n      goods.sort((a, b) => a.name.localeCompare(b.name))\n        .slice(0, 5)));\n};\n\nexport const getRedGoods = (): Promise<Good[]> => {\n  return getAll()\n    .then(goods => (\n      goods.filter(good => good.color === 'red')));\n};\n","import React from 'react';\n\ninterface Props {\n  goods: Good[]\n}\n\nexport const GoodsList: React.FC<Props> = (props) => {\n  const { goods } = props;\n\n  return (\n    <ul className=\"list-group text-center\">\n      {goods.map(({ id, name, color }) => (\n        <li\n          key={id}\n          style={{ color }}\n          className=\"list-group-item\"\n        >\n          {name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  text: string;\n  onLoad: (loadQuery?: () => Promise<Good[]>) => void;\n}\n\nexport const Button: React.FC<Props> = (props) => {\n  const { text, onLoad } = props;\n\n  return (\n    <button\n      type=\"button\"\n      onClick={() => onLoad()}\n      className=\"btn btn-primary\"\n    >\n      {text}\n    </button>\n  );\n};\n","import React from 'react';\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodsList } from './components/GoodsList';\nimport { Button } from './components/Button';\n\ninterface State {\n  goods: Good[];\n  hasLoadingError: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: [],\n    hasLoadingError: false,\n  };\n\n  loadGoods = async (loadQuery: () => Promise<Good[]>) => {\n    try {\n      const goods = await loadQuery();\n\n      this.setState({ goods });\n    } catch (error) {\n      this.setState({ hasLoadingError: true });\n    }\n  };\n\n  render() {\n    const { goods, hasLoadingError } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of Goods</h1>\n        {goods.length > 0\n         && <GoodsList goods={goods} />}\n        {hasLoadingError\n          && <h2>Something went wrong...</h2>}\n        <Button\n          text=\"Load all goods\"\n          onLoad={() => this.loadGoods(getAll)}\n        />\n        <Button\n          text=\"Load 5 first goods\"\n          onLoad={() => this.loadGoods(get5First)}\n        />\n        <Button\n          text=\"Load red goods\"\n          onLoad={() => this.loadGoods(getRedGoods)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}